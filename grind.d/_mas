# vim: ft=zsh
SUBCOMMAND_DESC="Library for App Store (mas) definitions"
SUBCOMMAND_HELP=$(cat <<EOH
Functions:

appstore APPNAME APPID       Will check using "mas" if APPNAME
                             is installed, if not it will use
                             APPID to install it using "mas".
                             Note: The application should be
                             already listed on 'Puchases'.


This API is designed to use 'mas' the Mac App Store
command-line interface (https://github.com/argon/mas).
Which can be installed using Homebrew.

This API will ignore calls and warn if 'mas' isn't installed.

To ensure that 'mas' is available add to your definition
before calls to 'appstore':

use 'brew'
brew_pkg 'mas'

EOH
)

typeset -g _MAS_APPS_INSTALLED
typeset -g _MAS_APPS_REQUESTED

function _mas_is_installed() {
  _MAS_APPS_INSTALLED="${_MAS_APPS_INSTALLED:-$(mas list)}"
  grep -q "${1}" <(echo "${_MAS_APPS_INSTALLED}" )
}

function _mas_not_available() {
  type -a mas &> /dev/null
  [[ $? -ne 0 ]] && true || false
}

function mas_requested() {
  echo "${_MAS_APPS_REQUESTED}"
}

function appstore() {
  local appname="${1}"
  local appid="${2}"

  log "appstore appname: ${appname} appid: ${appid}"

  _mas_not_available && \
    warn "'mas' not installed, run 'grind _mas' for more information.\n" && \
    warn "Ignoring: appstore '${appname}' ${appid}\n" && \
    return

  _MAS_APPS_REQUESTED+="${appname}\n"

  do_run "mas install ${appid}"
    unless "_mas_is_installed '${appname}'"
}

# allow access to help by 'grind _lib --help'
case ${1} in -h|--help) help;; esac
