# vim: ft=zsh
SUBCOMMAND_DESC="Library for App Store (mas) definitions"
SUBCOMMAND_HELP=$(cat <<EOH
Functions:

appstore APPNAME APPID       Will check using "mas" if APPNAME
                             is installed, if not it will use
                             APPID to install it using "mas".
                             Note: The application should be
                             already listed on 'Puchases'.


This API is designed to use 'mas' the Mac App Store
command-line interface (https://github.com/argon/mas).
Which can be installed using Homebrew.

This API will ignore calls and warn if 'mas' isn't installed.

To ensure that 'mas' is available add to your definition
before calls to 'appstore':

use 'brew'
brew_pkg 'mas'

EOH
)

# these need to be excluded from checks
typeset -ga _MAS_DEFAULT_APPS_MONTEREY=(
  'App Store' Automator Books Calculator Calendar Chess
  Contacts Dictionary FaceTime 'Find My' 'Font Book' 
  GarageBand Home iMovie Keynote Mail Maps Messages
  Music News Notes Numbers Pages 'Photo Booth' Photos
  Podcasts Preview Reminders Safari Shortcuts Stickies
  Stocks TextEdit TV VoiceMemos 'Time Machine' 'Image Capture'
  'Launchpad' 'Mission Control' 'QuickTime Player' Siri 
  'System Preferences' 'FindMy')

typeset -g _MAS_APPS_INSTALLED
typeset -ga _MAS_APPS_REQUESTED

function _mas_is_installed() {
  _MAS_APPS_INSTALLED="${_MAS_APPS_INSTALLED:-$(mas list)}"
  grep -q "${1}" <(echo "${_MAS_APPS_INSTALLED}" )
}

function _mas_not_available() {
  type -a mas &> /dev/null
  [[ $? -ne 0 ]] && true || false
}

function mas_missing() {
  _mas_not_available && \
    warn "'mas' not installed, can't run mas_missing()\n" && \
    return

  # default apps
  local osname=$(__macos_name)
  local default_apps="_MAS_DEFAULT_APPS_${(U)osname}"
  log "loading default apps for '${osname}': ${(j/,/P)default_apps[@]}"

  # list files in /Applications and /System/Applications, ignore ':' and empty lines
  local -a apps_installed=("${(f)$(ls /Applications /System/Applications | grep -E '(.app|.localized)' | grep -vE '(:|^$)')}")
  log "found installed: ${(j/,/)apps_installed[@]}"

  # loop found apps, check if is default, requested or extra
  log "requested apps: ${_MAS_APPS_REQUESTED[@]}"
  for app in "${apps_installed[@]}"; do
    if grep -q ${app:r} <<<"${(P)default_apps[@]}"; then
      log "[default]\t${app:r}"
    elif ! grep -q ${app:r} <<<"${_MAS_APPS_REQUESTED[@]}"; then
      log "[extra_app]\t${app:r}"
      extra_apps+="${app:r}\n"
    else
      log "[requested]\t${app:r}"
    fi
  done

  echo ${extra_apps}
}

function appstore() {
  local appname="${1}"
  local appid="${2}"

  log "appstore appname: ${appname} appid: ${appid}"

  _mas_not_available && \
    warn "'mas' not installed, run 'grind _mas' for more information.\n" && \
    warn "Ignoring: appstore '${appname}' ${appid}\n" && \
    return

  _MAS_APPS_REQUESTED+="${appname}"

  do_run "mas install ${appid}"
    unless "_mas_is_installed '${appname}'"
}
