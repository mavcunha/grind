# vim: ft=sh
SUBCOMMAND_DESC="Library for appdmg app installation from a URI"
SUBCOMMAND_HELP=$(cat <<EOH
Functions:

appdmg 'APPNAME' 'URI'    Will download, mount and attempt to install all .app
                          files inside this .dmg file into /Applications
                          APPNAME should be the name of the app installed and
                          URI

EOH
)

DITTO_BIN='/usr/bin/ditto'
HDIUTIL_BIN='/usr/bin/hdiutil'

function _appdmg_mount() {
  local file="${1}"
  log "calling hdiutil on ${file}"
  local plist=$(yes | ${HDIUTIL_BIN} mount -plist -nobrowse -readonly -mountrandom /tmp/ "${file}")
  log "plist: ${plist}"
  local mount_point=$(echo "${plist}" | \
    awk '/<?xml/,0{if (!/<?xml/)print}' | \
    xpath -e "//key[.='mount-point']/following-sibling::*[1]/text()" 2>/dev/null)
  log "mount-point: ${mount_point}"
  echo "${mount_point}"
}

function _appdmg_teardown() {
  local mount_point="${1}"
  local downloaded_file="${2}"

  log "_appdmg_teardown"

  log "unmounting: ${mount_point}"
  ${HDIUTIL_BIN} eject ${mount_point} &> /dev/null || warn "Problems unmounting ${mount_point}\n"

  log "safe removing: ${downloaded_file}"
  safe_rm_download_dir "${downloaded_file}"
}

function _appdmg_install() {
  local mount="${1}"
  while read file; do
    appfile=$(basename "${file}")
    log "calling ditto on ${file} to /Applications/${appfile}"
    ${DITTO_BIN} --rsrc "${file}" "/Applications/${appfile}" || error "Moving ${file} to /Applications\n"
  done < <(find "${mount}" -type d -name "*.app" 2> /dev/null)
}

function _appdmg_process() {
  local uri="${1}"
  local dmg=${uri##*/}

  log "init download of dmg: ${dmg} from uri: ${uri}"
  local downloaded_file=$(file_download "${uri}" "${dmg}")

  log "mounting: ${downloaded_file}"
  mount=$(_appdmg_mount "${downloaded_file}")

  log "installing apps found in ${mount}"
  _appdmg_install "${mount}"

  log "call _appdmg_teardown"
  _appdmg_teardown "${mount}" "${downloaded_file}"
}

function appdmg_custom() {
  local uri="${1}"
  do_run "_appdmg_process '${uri}'"
}

function appdmg() {
  local appname="${1}"
  local uri="${2}"
  appdmg_custom "${uri}"
    unless_dir "/Applications/${appname}.app"
}

# allow access to help by 'grind _lib --help'
case ${1} in -h|--help) help;; esac
