# vim: ft=zsh
SUBCOMMAND_DESC="Library to interact with github"
SUBCOMMAND_HELP=$(cat <<EOH
Functions:

github "REPO"  "DIRECTORY"        Will checkout REPO from github into
                                  DIRECTORY. REPO can be defined in two forms,
                                  abbreviated as 'user/repo' or fully qualified
                                  like 'https://github.com/user/repo.git',
                                  'git@github.com:user/repo.git' or
                                  'ssh://git@github.com:user/repo.git'

                                  In fact this allows you to clone from other
                                  servers not only github, although it would
                                  look weird.

EOH
)

GITHUB_URL="https://github.com"

function __github_resolve_repo_url() {
  local repo="${1}"

  if [[ ${repo} =~ ^(http|ssh|git@) ]]; then
    log "fully qualified URL detected: ${repo}"
    repository=${repo}
  else
    log "partial URL detected: ${repo}, assuming prefix is ${GITHUB_URL}"
    local user_repo=(${(s:/:)repo})
    log "user: ${user_repo[1]} repo: ${user_repo[2]}" 
    repository="${GITHUB_URL}/${1}"
  fi

  # add .git if missing
  [[ ! ${repository} =~ .git$ ]] && repository="${repository}.git"

  log "repository: ${repository}"
  echo ${repository}
}

function github() {
  [[ -z ${1} || ! ${1} =~ / ]] && error "Missing 'user/repository' argument\n"
  [[ -d ${2} ]] || error "${2} must be a directory\n"

  repository=$(__github_resolve_repo_url ${1})

  target_dir="${2}/${repository:t:r}"
  log "target_dir: ${target_dir}"

  do_run "git clone ${repository} ${target_dir}"
    unless_dir "${target_dir}"
}

# allow access to help by 'grind _lib --help'
case ${1} in -h|--help) help;; esac
