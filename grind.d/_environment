# vim: ft=sh sw=2 ts=2 expandtab
# This file is loaded first and anything defined here
# will be available to all subcommands.
# This is a valid bash file and will execute
SUBCOMMAND_DESC="Environment setttings"
SUBCOMMAND_HELP=$(cat <<EOH

This is a plain bash file that is loaded
before any other library and/or command.

Things that are "global" can go here.

EOH
)

# Example, force Java to version 1.7 for all subcomands.
# export JAVA_HOME=$(/usr/libexec/java_home -v 1.7)

# A helper function...
# that returns true if running on OSX
function __osx() {
  [[ $(uname) == "Darwin" ]]
}

# Simple macOS || Linux function
function __osname() {
  __osx && echo "macos" || echo "linux"
}

# This will open a file with open in OSX
# or try xdg-open on Ubuntu...
function open_file() {
  local file=${1}
  [[ -n ${file} ]] || return
  __osx && open ${file} || xdg-open ${file}
}

function file_download() {
  local uri="${1}"
  local file="${2}"
  GRIND_DOWNLOAD_DIR=$(mktemp -d /tmp/grind_download.XXXXXX)
  log "created tmpdir: ${GRIND_DOWNLOAD_DIR}"
  /usr/bin/curl -o "${GRIND_DOWNLOAD_DIR}/${file}" -C - -L -sS --url "${uri}" || error "Error downloading file from ${uri}\n"
  echo "${GRIND_DOWNLOAD_DIR}/${file}"
}

function safe_rm_download_dir() {
  local dir=${GRIND_DOWNLOAD_DIR?"Missing GRIND_DOWNLOAD_DIR"}
  log "_safe_rm ${dir}"
  [[ -d "${dir}" && "${dir}" =~ ^/tmp/grind_download\. ]] && rm -Rf "${dir}" \
    || warn "Directory: ${dir} does not look like a grind download directory.\n"
}

# These are defaults for configuration directory and file
# they can be overwriten using environmental variables
GRIND_CONF_DIR=${GRIND_CONF_DIR:-"${ROOT_DIR}/conf"}
GRIND_CONF_FILE=${GRIND_CONF_FILE:-"${GRIND_CONF_DIR}/grind.conf"}

# default values for user configurations
GRIND_DEF_DIR=${GRIND_DEF_DIR:-"${ROOT_DIR}/definitions"}
GRIND_MACHINE_NAME=${GRIND_MACHINE_NAME:-$(hostname -s)}

# load user configurations
log "user configurations from: ${GRIND_CONF_FILE}"
[[ -f ${GRIND_CONF_FILE} ]] && . ${GRIND_CONF_FILE}
